webpackJsonp([22],{1568:function(e,n,t){var o=t(1),u=t(66),a=t(308).PageRenderer;a.__esModule&&(a=a.default);var M=u({displayName:"WrappedPageRenderer",getInitialState:function(){return{content:t(1624)}},componentWillMount:function(){},render:function(){return o.createElement(a,Object.assign({},this.props,{content:this.state.content}))}});M.__catalog_loader__=!0,e.exports=M},1624:function(e,n){e.exports='```react\nnoSource: true\n---\n<React.Fragment>\n\t<V6Banner oldHash="#/dropdown/variations">\n\t\t<AcceptsStyledSystemProps />\n\t\t<AriaCompliant />\n\t</V6Banner>\n</React.Fragment>\n```\n\n```react\nshowSource: true\nstate: { isOpen: false }\n---\n<MenuDemo>\n\t<Menu isOpen={state.isOpen} onToggleMenu={() => setState({ isOpen: !state.isOpen })}>\n\t\t<Menu.Toggle>Show a Dropdown!</Menu.Toggle>\n\t\t<Menu.Dropdown>\n\t\t\t<Menu.Item onClick={() => alert("Menu Item 1")}>Menu Item 1</Menu.Item>\n\t\t\t<Menu.Item onClick={() => alert("Menu Item 2")}>Menu Item 2</Menu.Item>\n\t\t\t<Menu.Item disabled onClick={() => alert("Menu Item 3")}>Menu Item 3</Menu.Item>\n\t\t</Menu.Dropdown>\n\t</Menu>\n</MenuDemo>\n```\n\n## Split Dropdown Toggle\n\n```react\nshowSource: true\nstate: { isOpen: false }\n---\n<MenuDemo>\n\t<Menu isOpen={state.isOpen} onToggleMenu={() => setState({ isOpen: !state.isOpen })}>\n\t\t<Menu.Toggle>\n\t\t\t<Menu.ActionButton onClick={() => alert("Different Action")}>Show a Dropdown!</Menu.ActionButton>\n\t\t</Menu.Toggle>\n\t\t<Menu.Dropdown>\n\t\t\t<Menu.Item onClick={() => alert("Menu Item 1")}>Menu Item 1</Menu.Item>\n\t\t\t<Menu.Item onClick={() => alert("Menu Item 2")}>Menu Item 2</Menu.Item>\n\t\t\t<Menu.Item disabled onClick={() => alert("Menu Item 3")}>Menu Item 3</Menu.Item>\n\t\t</Menu.Dropdown>\n\t</Menu>\n</MenuDemo>\n```\n\n## Dropdown Menu Items\n\n```react\nshowSource: true\nstate: { isOpen: false, isChecked: false }\n---\n<MenuDemo>\n\t<Menu isOpen={state.isOpen} onToggleMenu={() => setState({ isOpen: !state.isOpen })}>\n\t\t<Menu.Toggle>Show a Dropdown!</Menu.Toggle>\n\t\t<Menu.Dropdown>\n\t\t\t<Menu.Title>Dropdown</Menu.Title>\n\t\t\t<Menu.Separator />\n\t\t\t<Menu.Item onClick={() => alert("Menu Item")}>Menu Item</Menu.Item>\n\t\t\t<Menu.CheckboxItem isChecked={state.isChecked} onToggle={() => setState({ isChecked: !state.isChecked })}>Menu Checkbox</Menu.CheckboxItem>\n\t\t\t<Menu.LinkItem href="https://faithlife.github.io/styled-ui/#/icons" target="_blank">Menu Link</Menu.LinkItem>\n\t\t</Menu.Dropdown>\n\t</Menu>\n</MenuDemo>\n```\n\n## Using custom toggle component\n\n```react\nshowSource: true\nstate: { isOpen: false }\n---\n<MenuDemo>\n\t<Menu isOpen={state.isOpen} onToggleMenu={() => setState({ isOpen: !state.isOpen })}>\n\t\t<Menu.Toggle>\n\t\t\t{(ref, {onKeyDown, onClick, ariaProps}) =>\n\t\t\t\t<Button variant="primary" size="medium" ref={ref} onKeyDown={onKeyDown} onClick={onClick} {...ariaProps}>Show a Dropdown!</Button>}\n\t\t</Menu.Toggle>\n\t\t<Menu.Dropdown>\n\t\t\t<Menu.Item onClick={() => alert("Menu Item 1")}>Menu Item 1</Menu.Item>\n\t\t\t<Menu.Item onClick={() => alert("Menu Item 2")}>Menu Item 2</Menu.Item>\n\t\t\t<Menu.Item onClick={() => alert("Menu Item 3")}>Menu Item 3</Menu.Item>\n\t\t</Menu.Dropdown>\n\t</Menu>\n</MenuDemo>\n```\n\n## With icon\n\nvariant = icon | thumbnail | avatar\n\n```react\nshowSource: true\nstate: { isOpen: false }\n---\n<MenuDemo>\n\t<Menu isOpen={state.isOpen} width="280px" onToggleMenu={() => setState({ isOpen: !state.isOpen })}>\n\t\t<Menu.Toggle>Show a Dropdown!</Menu.Toggle>\n\t\t<Menu.Dropdown>\n\t\t\t<Menu.Item onClick={() => alert("Menu Item 1")}>\n\t\t\t\t<Menu.ItemIcon><FavoriteFilled /></Menu.ItemIcon>\n\t\t\t\t<Menu.ItemPrimaryText>Menu Item 1</Menu.ItemPrimaryText>\n\t\t\t\t<Menu.ItemSecondaryText>Variant = Icon</Menu.ItemSecondaryText>\n\t\t\t</Menu.Item>\n\t\t\t<Menu.Item onClick={() => alert("Menu Item 2")}>\n\t\t\t\t<Menu.ItemIcon src={thumbnailSrc} variant="thumbnail" />\n\t\t\t\t<Menu.ItemPrimaryText>Menu Item 2</Menu.ItemPrimaryText>\n\t\t\t\t<Menu.ItemSecondaryText>Variant = Thumbnail</Menu.ItemSecondaryText>\n\t\t\t</Menu.Item>\n\t\t\t<Menu.Item onClick={() => alert("Menu Item 3")}>\n\t\t\t\t<Menu.ItemIcon src={avatarSrc} variant="avatar" />\n\t\t\t\t<Menu.ItemPrimaryText fontWeight={1}>Menu Item 3 (Avatar)</Menu.ItemPrimaryText>\n\t\t\t</Menu.Item>\n\t\t</Menu.Dropdown>\n\t</Menu>\n</MenuDemo>\n```\n\n## Styling\n\nToggle, Menu, Title, Item, Item variants, and Item config children all accept styled-system props.\n\n```react\nshowSource: true\nstate: { isOpen: false }\n---\n<MenuDemo>\n\t<Menu isOpen={state.isOpen} onToggleMenu={() => setState({ isOpen: !state.isOpen })}>\n\t\t<Menu.Toggle variant="minor">Show a Dropdown!</Menu.Toggle>\n\t\t<Menu.Dropdown>\n\t\t\t<Menu.Item onClick={() => alert("Menu Item 1")}>Menu Item 1</Menu.Item>\n\t\t\t<Menu.Item onClick={() => alert("Menu Item 2")}>Menu Item 2</Menu.Item>\n\t\t\t<Menu.Item color="red" onClick={() => alert("Menu Item 3")}>Menu Item 3</Menu.Item>\n\t\t</Menu.Dropdown>\n\t</Menu>\n</MenuDemo>\n```\n'}});
//# sourceMappingURL=22.afde3d50.chunk.js.map